const w=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))s(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const c of i.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function o(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerpolicy&&(i.referrerPolicy=t.referrerpolicy),t.crossorigin==="use-credentials"?i.credentials="include":t.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(t){if(t.ep)return;t.ep=!0;const i=o(t);fetch(t.href,i)}};w();class r{constructor(e,o){this.x=e,this.y=o}addVec(e){return new r(this.x+e.x,this.y+e.y)}length(){return Math.sqrt(this.x**2+this.y**2)}negate(){return new r(this.x*-1,this.y*-1)}}const m=.5;class y{constructor(e,o,s=new r(0,0),t){this.pos=e,this.mass=o,this.velocity=s,this.color=t}calcGravityForce(e){const o=new r(this.pos.x-e.pos.x,this.pos.y-e.pos.y),s=-m*this.mass*e.mass/o.length()**3;return new r(s*o.x,s*o.y)}addVelocity(e){const o=new r(e.x/this.mass,e.y/this.mass);this.velocity=this.velocity.addVec(o)}updatePosition(){this.pos=this.pos.addVec(this.velocity)}render(e){e.fillStyle=this.color,e.beginPath(),e.arc(this.pos.x,this.pos.y,this.mass/100,0,2*Math.PI),e.fill()}}const x="rgb(200, 0, 0)",v="rgb(0, 0, 200)",l=[new y(new r(700,500),1e3,new r(0,1),x),new y(new r(900,500),1e3,new r(0,-1),v)],h=document.querySelector("#gl"),p=P(h);let u=0,a=0,f=0,d=0;function R(n){u=1e3/n,f=Date.now(),g()}R(60);function P(n){if(!n){console.error("ERROR cant find canvas");return}n.width=window.innerWidth,n.height=window.innerHeight;const e=n.getContext("2d");if(!e){console.error("ERROR on getting rendering context");return}return e}function g(){requestAnimationFrame(g),a=Date.now(),d=a-f,!(d<=u)&&(f=a-d%u,p.clearRect(0,0,h.width,h.height),E(l),O(l),L(p,l))}function E(n){if(!(n.length<2))for(let e=0;e<n.length;++e)for(let o=0;o<n.length;++o){if(e===o)continue;const s=n[e],t=n[o],i=s.calcGravityForce(t),c=i.negate();s.addVelocity(i),t.addVelocity(c)}}function O(n){n.forEach(e=>e.updatePosition())}function L(n,e){e.forEach(o=>o.render(n))}
